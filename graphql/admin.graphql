extend type Query {

    promos: [Promo!]! @paginate(defaultCount: 10) @guard @can(ability: "viewAny")

    orders(
        orderBy: _ @orderBy(columns: ["id", "price", "stock", "created_at"])
    ): [Order!]! @paginate(defaultCount: 10) @guard @can(ability: "ViewAll")

    status: [Status!]! @guard @all @can(ability: "viewAny")
    outOfStockProducts: [Product]! @guard @can(ability: "getOutOfStock")

}

extend type Mutation {

    adminLogin(input: LoginInput!): LoginResult!
    createProduct(input: CreateProductInput!): ProductOperationResult! @guard @can(ability: "create", model: "Product")
    uploadProductPhoto(input: UploadProductPhotoInput!): ProductOperationResult! @guard @can(ability: "upload", model: "Product")
    updateProduct(input: UpdateProductInput!): ProductOperationResult! @can(ability: "update", model: "Product")
    deleteProduct(input: DeleteProductInput!): Result! @can(ability: "delete", model: "Product")
    createPromo(input: CreatePromoInput!): PromoOperationResult! @can(ability: "create", model: "Promo")
    updatePromo (input: UpdatePromoInput!): PromoOperationResult! @can(ability: "update", model: "Promo")
    deletePromo(input: DeletePromoInput!): Promo @can(ability: "delete", model: "Promo") @delete
    updateOrderStatus(input: UpdateOrderStatusInput!): Result! @can(ability: "updateStatus", model: "Order")
    restockProduct(input: RestockProductInput!): Result! @can(ability: "restock", model: "Product")
    createCategory(input: CreateCategoryInput!): Result! @can(ability: "create", model: "Category")
    updateCategory(input: UpdateCategoryInput!): Result! @can(ability: "update", model: "Category")
    deleteCategory(input: DeleteCategoryInput!): Category @delete @can(ability: "delete")

}